{{- if empty .Values.manualSecretName }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "mssql.fullname" . }}
  labels:
    {{- include "mssql.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace ( include "mssql.fullname" .) ) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $mssqlSecret to existing secret data or generate a random one when not exists
  {{- $mssqlSecret0 := (get $secretData "SA_PASSWORD") | default (randAlphaNum 32 | b64enc) }}
  {{- $mssqlSecret := (  default $mssqlSecret0 .Values.password) }}
  SA_PASSWORD: {{ $mssqlSecret | quote }}
{{- end }}